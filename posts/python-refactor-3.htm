<!DOCTYPE html> <html> <head> <title>Untangling our Python Code | Khan Academy Engineering</title> <link rel="icon" href="/images/favicon.ico"> <meta http-equiv="Content-Type" content="text/html;charset=utf-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <meta name="description" content="We're the engineers behind Khan Academy. We're building a free, world-class education for anyone, anywhere.">  <style>#left-bar .bio a,#left-bar .logo a{text-decoration:none}#left-bar .logo,#left-bar .subscription-info{text-align:left}.c,.c1,.caption,.cm,.cs,.ge,caption,figcaption{font-style:italic}body,html{height:100%;margin:0}body{font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;background-color:#FEFEFE;font-size:14px;width:920px}@media (max-width:920px){body{width:100%}body.mobile-menu-visible{background-color:#252F3D}}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.inline-author-photo{height:1.6em;width:1.6em;border-radius:.8em;vertical-align:middle;margin-right:4px}.font-awesome-svg{width:1em;height:1em;display:inline-block}#left-bar{box-sizing:border-box;display:table-cell;background-color:#252F3D;color:#f0f0f0;width:325px;padding:10px 35px 35px}@media (max-width:920px){#left-bar{display:block;width:100%;padding:0 20px}#left-bar.mobile-visible{padding-bottom:60px}#left-bar:not(.mobile-visible) section{display:none}}#left-bar .logo{font-family:"Arial Black","Arial Bold",Gadget,sans-serif;font-size:28px;letter-spacing:1px;line-height:1em;margin-bottom:6px;margin-left:-2px;margin-top:0;text-transform:uppercase}#left-bar .logo a{color:#f0f0f0}#left-bar .logo.mobile{font-size:24px;display:none}@media (max-width:920px){#left-bar .logo.mobile{display:block}#left-bar .logo.mobile a{padding:11px 20px 15px;margin:0 -20px -15px;display:block;text-decoration:none;color:#f0f0f0}#left-bar .logo.mobile svg{opacity:.8;margin-right:-2px;margin-top:1px;height:25px}#left-bar .logo.mobile .text,#left-bar .logo.mobile svg{vertical-align:middle}#left-bar .logo{display:none}}#left-bar .logo .engineering{color:#9cb53b}#left-bar .bio{font-size:12px;line-height:1.4;margin-top:10px}#left-bar .bio,#left-bar .bio *{color:#dbdcde}#left-bar .bio a:hover{text-decoration:underline}#left-bar .subscription-info .links{font-size:24px}#left-bar .subscription-info .links a{margin-right:7px;text-decoration:none;color:#f0f0f0}#left-bar .subscription-info .links a:hover{border-bottom:1px solid #f0f0f0}#left-bar .subscription-info .links .email{margin-top:-1px}#left-bar .section-heading{color:#dbdcde;font-size:12px;font-weight:300;letter-spacing:.5px;margin-top:40px;text-transform:lowercase}#left-bar .post-blurb{margin-top:30px;padding-bottom:4px;border-left:1px solid transparent;padding-left:10px;margin-left:-10px}@media (max-width:920px){#left-bar .post-blurb{border-left:10px solid transparent;padding-left:17px;margin-left:-26px}}#left-bar .post-blurb:first-of-type{margin-top:20px}#left-bar .post-blurb.team-infrastructure{border-color:#E57281}#left-bar .post-blurb.team-web-frontend{border-color:#63BBD9}#left-bar .post-blurb.team-mobile{border-color:#63BB81}#left-bar .post-blurb.team-eng-leads{border-color:#ccc}#left-bar .post-blurb.team-design{border-color:#ab59c6}#left-bar .post-blurb.team-wtf{border-color:#ff00af}#left-bar .post-blurb .title{font-weight:400;margin:0 0 9px}#left-bar .post-blurb .title a{color:#f0f0f0;text-decoration:none}#left-bar .post-blurb .title a:hover{text-decoration:underline}#left-bar .post-blurb .info{font-size:12px}#left-bar .post-blurb .info .author-link{color:#f0f0f0;text-decoration:none;font-weight:700;font-size:11px}#left-bar .post-blurb .info .author-link:hover{text-decoration:underline}#left-bar .meta-section .link-list{margin:0 0 0 4px;padding:0;list-style-type:square}#left-bar .meta-section .link-list li{margin-bottom:10px}#left-bar .meta-section .link-list li a{margin-left:-4px}#left-bar .meta-section .link-list a{color:#f0f0f0;text-decoration:none}#left-bar .meta-section .link-list a:hover{text-decoration:underline}#content{display:table-cell;padding:10px 35px 35px 50px;color:#404040}@media (max-width:920px){#left-bar .meta-section .link-list{list-style-type:none}#content{padding:10px 20px 50px;display:block}#content.mobile-hidden{display:none}}#content .title a{letter-spacing:1px;margin-bottom:8px;font-size:28px;line-height:1;color:#404040;text-decoration:none}#content .title a:focus,#content .title a:hover{text-decoration:underline}#content .info .author-link{color:#404040;font-weight:700;text-decoration:none}#content .info .author-link:hover{text-decoration:underline}#content .info .team-tag{border-radius:.3em;padding:.3em .8em;font-size:.7em;font-weight:500;display:inline-block;color:#fff;margin-left:4px;margin-right:4px}.cp,.cs,.gs,.k,.kc,.kd,.kn,.kp,.kr,.kt,.nc,.ne,.nf,.o,.ow{font-weight:700}#content .info .team-tag.web-frontend{background-color:#63BBD9}#content .body{margin-top:30px;line-height:1.5;width:500px}@media (max-width:920px){#content .body{width:100%}}#content .body a{color:#6c7d28;text-decoration:none}#content .body a:hover{text-decoration:underline}#content .body img{max-width:100%}#content .keep-reading-buttons{display:table;margin-top:30px;width:100%}#content .keep-reading-buttons .keep-reading-cell{display:table-cell;margin:0;padding:0;vertical-align:top;width:50%}#content .keep-reading-buttons .keep-reading-right{text-align:right}#content .keep-reading-buttons .button{padding:3px 0;display:inline-block;max-width:90%;color:#404040}#content .keep-reading-buttons .button .header{font-size:12px;color:#767676}#content .keep-reading-buttons .button .post-title{margin-top:8px;color:#6c7d28;text-decoration:none;display:block}#content .keep-reading-buttons .button .post-title:hover{text-decoration:underline}#content .keep-reading-buttons .button.next-post-button{border-right:2px solid;padding-right:10px;margin-right:-10px}#content .keep-reading-buttons .button.prev-post-button{border-left:2px solid;padding-left:10px;margin-left:-10px}#content .keep-reading-buttons .button.team-infrastructure{border-color:#E57281}#content .keep-reading-buttons .button.team-web-frontend{border-color:#63BBD9}#content .keep-reading-buttons .button.team-eng-leads{border-color:#ccc}#content .keep-reading-buttons .button.team-design{border-color:#ab59c6}.code,.codehilite{background-color:#EEE;border-radius:6px;border:1px solid #CCC;overflow-x:auto;padding:6px;margin:14px 0}.code .ln,.codehilite .ln{color:#AAA}.label{margin-top:1.5em}.caption{text-align:center}caption,table.data-table th{text-align:left}.align-center{display:block;margin-left:auto;margin-right:auto}.literal,code{word-wrap:break-word}caption{caption-side:bottom}table.data-table{margin:0 auto}table.data-table td{text-align:right}table.data-table td,table.data-table th{padding:0 5px;white-space:nowrap}.x-scrollable{overflow-x:auto}.hll{background-color:#ffc}.c{color:#998}.err{color:#a61717;background-color:#e3d2d2}.cm{color:#998}.cp{color:#999}.c1{color:#998}.cs{color:#999}.gd{color:#000;background-color:#fdd}.gr{color:#a00}.gh{color:#999}.gi{color:#000;background-color:#dfd}.go{color:#888}.gp{color:#555}.gu{color:#aaa}.gt{color:#a00}.kt{color:#458}.m{color:#099}.s{color:#b84}.na{color:teal}.nb{color:#999}.nc{color:#458}.no{color:teal}.ni{color:purple}.ne,.nf{color:#900}.nn{color:#555}.nt{color:navy}.nv{color:teal}.w{color:#bbb}.mf,.mh,.mi,.mo{color:#099}.s2,.sb,.sc,.sd,.se,.sh,.si,.sx{color:#b84}.sr{color:olive}.s1,.ss{color:#b84}.bp{color:#999}.vc,.vg,.vi{color:teal}.il{color:#099}</style>  </head> <body> <div id="left-bar"> <h1 class="logo"> <a href="/"><span aria-label="Khan Academy">KA</span> <span class="engineering">Engineering</span></a> </h1> <h1 class="logo mobile">  <a id="mobile-menu-button" href="javascript: void 0"> <svg class="font-awesome-svg" viewbox="0 0 1792 1792" aria-hidden="true"><path d="M1664 1344v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm0-512v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm0-512v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45z" fill="#fff"/></svg> <span class="text"><span aria-label="Khan Academy">KA</span> <span class="engineering">Engineering</span></span> </a> </h1> <section class="bio"> We're the engineers behind <a href="https://www.khanacademy.org">Khan Academy</a>. We're building a free, world-class education for anyone, anywhere. </section> <section class="subscription-info"> <h2 class="section-heading">Subscribe</h2> <div class="links"> <a href="https://twitter.com/KAEngineering"><span class="sr-only">Subscribe with Twitter</span><svg class="font-awesome-svg" viewbox="0 0 1792 1792" aria-hidden="true"><path d="M1684 408q-67 98-162 167 1 14 1 42 0 130-38 259.5t-115.5 248.5-184.5 210.5-258 146-323 54.5q-271 0-496-145 35 4 78 4 225 0 401-138-105-2-188-64.5t-114-159.5q33 5 61 5 43 0 85-11-112-23-185.5-111.5t-73.5-205.5v-4q68 38 146 41-66-44-105-115t-39-154q0-88 44-163 121 149 294.5 238.5t371.5 99.5q-8-38-8-74 0-134 94.5-228.5t228.5-94.5q140 0 236 102 109-21 205-78-37 115-142 178 93-10 186-50z" fill="#fff"/></svg></a> <a href="/rss.xml"><span class="sr-only">Subscribe with RSS</span><svg class="font-awesome-svg" viewbox="0 0 1792 1792" aria-hidden="true"><path d="M576 1344q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm512 123q2 28-17 48-18 21-47 21h-135q-25 0-43-16.5t-20-41.5q-22-229-184.5-391.5t-391.5-184.5q-25-2-41.5-20t-16.5-43v-135q0-29 21-47 17-17 43-17h5q160 13 306 80.5t259 181.5q114 113 181.5 259t80.5 306zm512 2q2 27-18 47-18 20-46 20h-143q-26 0-44.5-17.5t-19.5-42.5q-12-215-101-408.5t-231.5-336-336-231.5-408.5-102q-25-1-42.5-19.5t-17.5-43.5v-143q0-28 20-46 18-18 44-18h3q262 13 501.5 120t425.5 294q187 186 294 425.5t120 501.5z" fill="#fff"/></svg></a> </div> </section> <section> <h2 class="section-heading">Latest posts</h2> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/khanalytics.htm">New data pipeline management platform at Khan Academy</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/ragini.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/guptaragini">Ragini Gupta</a> on April 30<sup aria-hidden="true">th</sup> </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/python-refactor-3.htm">Untangling our Python Code</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/carter.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="http://carterjbastian.com/">Carter J. Bastian</a> on April 16<sup aria-hidden="true">th</sup> </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/slicker.htm">Slicker: A Tool for Moving Things in Python</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/ben-kraft.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://www.benkraft.org/">Ben Kraft</a> on April 2<sup aria-hidden="true">nd</sup> </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/python-refactor-1.htm">The Great Python Refactor of 2017 And Also 2018</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/csilvers.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/csilvers">Craig Silverstein</a> on March 19<sup aria-hidden="true">th</sup> </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/working-remotely.htm">Working Remotely</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/scottgrant.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/scotchfield">Scott Grant</a> on Oct 2, 2017 </div> </div> <div class="post-blurb team-mobile"> <h3 class="title"> <a href="/posts/tips-for-code-reviews.htm">Tips for giving your first code reviews</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/hannah.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="http://hannahblumberg.com/">Hannah Blumberg</a> on Sep 18, 2017 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/lets-reduce.htm">Let's Reduce! A Gentle Introduction to Javascript's Reduce Method</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/joshcomeau.jpeg" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/joshwcomeau">Josh Comeau</a> on Jul 10, 2017 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/creating-query-components-with-apollo.htm">Creating Query Components with Apollo</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/brian-genisio.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/BrianGenisio">Brian Genisio</a> on Jun 12, 2017 </div> </div> <div class="post-blurb team-mobile"> <h3 class="title"> <a href="/posts/react-native-monorepo.htm">Migrating to a Mobile Monorepo for React Native</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/jared.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="http://jaredforsyth.com/">Jared Forsyth</a> on May 29, 2017 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/memcached-fms.htm">Memcached-Backed Content Infrastructure</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/ben-kraft.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://www.benkraft.org/">Ben Kraft</a> on May 15, 2017 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/memcached-profiling.htm">Profiling App Engine Memcached</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/ben-kraft.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://www.benkraft.org/">Ben Kraft</a> on May 1, 2017 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/flex-language-shootout.htm">App Engine Flex Language Shootout</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/amos-latteier.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/latteier">Amos Latteier</a> on Apr 17, 2017 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/new-oss-activity.htm">What's New in OSS at Khan Academy</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/brian-genisio.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/BrianGenisio">Brian Genisio</a> on Apr 3, 2017 </div> </div> <div class="post-blurb team-mobile"> <h3 class="title"> <a href="/posts/automating-app-store-screenshots.htm">Automating App Store Screenshots</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/bryanclark.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://www.bryanjclark.com/">Bryan Clark</a> on Mar 27, 2017 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/its-okay-to-break-things.htm">It's Okay to Break Things: Reflections on Khan Academy's Healthy Hackathon</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/kimeriegreen.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/Kimerie">Kimerie Green</a> on Mar 6, 2017 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/interning-at-khan-academy.htm">Interning at Khan Academy: from student to intern</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/shadajladdad.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://shadaj.me">Shadaj Laddad</a> on Dec 12, 2016 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/prototyping-with-framer.htm">Prototyping with Framer</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/nickbreen.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/MrNickBreen">Nick Breen</a> on Oct 3, 2016 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/evolving-our-content-infrastructure.htm">Evolving our content infrastructure</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/wchargin.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://wchargin.github.io">William Chargin</a> on Sep 19, 2016 </div> </div> <div class="post-blurb team-mobile"> <h3 class="title"> <a href="/posts/a-really-small-app.htm">Building a Really, Really Small Android App</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/charliemarsh.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="http://www.crmarsh.com">Charlie Marsh</a> on Aug 22, 2016 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/a-case-for-time-tracking.htm">A Case for Time Tracking: Data Driven Time-Management</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/olivernorthwood.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/allofthenorthwood">Oliver Northwood</a> on Aug 8, 2016 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/time-management-multiple-authors.htm">Time Management at Khan Academy</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/khanacademy.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://www.khanacademy.org/careers">Several Authors</a> on Jul 25, 2016 </div> </div> <div class="post-blurb team-eng-leads"> <h3 class="title"> <a href="/posts/healthy-hackathons.htm">Hackathons Can Be Healthy</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/tomyedwab.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://www.arguingwithalgorithms.com">Tom Yedwab</a> on Jul 11, 2016 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/transaction-safety.htm">Ensuring transaction-safety in Google App Engine</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/csilvers.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/csilvers">Craig Silverstein</a> on Jun 27, 2016 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/user-write-lock.htm">The User Write Lock: an Alternative to Transactions for Google App Engine</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/csilvers.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/csilvers">Craig Silverstein</a> on Jun 20, 2016 </div> </div> <div class="post-blurb team-eng-leads"> <h3 class="title"> <a href="/posts/engineering-principles.htm">Khan Academy's Engineering Principles</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/benkamens.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://bjk5.com">Ben Kamens</a> on Jun 6, 2016 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/shortest-regex.htm">Minimizing the length of regular expressions, in practice</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/csilvers.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/csilvers">Craig Silverstein</a> on May 23, 2016 </div> </div> <div class="post-blurb team-mobile"> <h3 class="title"> <a href="/posts/introducing-swifttweaks.htm">Introducing SwiftTweaks</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/bryanclark.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://www.bryanjclark.com/">Bryan Clark</a> on May 9, 2016 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/autonomous-dumbledore.htm">The Autonomous Dumbledore</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/evykassirer.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://www.evykassirer.com/">Evy Kassirer</a> on Apr 25, 2016 </div> </div> <div class="post-blurb team-eng-leads"> <h3 class="title"> <a href="/posts/career-development.htm">Engineering career development at Khan Academy</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/beneater.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/beneater">Ben Eater</a> on Apr 11, 2016 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/aphrodite-inline-css.htm">Inline CSS at Khan Academy: Aphrodite</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/jamiewong.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://jamie-wong.com">Jamie Wong</a> on Mar 29, 2016 </div> </div> <div class="post-blurb team-mobile"> <h3 class="title"> <a href="/posts/starting-android.htm">Starting Android at Khan Academy</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/benkomalo.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/benkomalo">Ben Komalo</a> on Feb 29, 2016 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/translation_assistant.htm">Automating Highly Similar Translations</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/kevinbarabash.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/kevinb7">Kevin Barabash</a> on Feb 15, 2016 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/snippet-server.htm">The weekly snippet-server: open-sourced</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/csilvers.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/csilvers">Craig Silverstein</a> on Feb 1, 2016 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/stories-from-interns.htm">Stories from our latest intern class</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/khanacademy.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://www.khanacademy.org/careers/interns">2015 Interns</a> on Dec 21, 2015 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/kanbanning-learnstorm-dev-process.htm">Kanbanning the LearnStorm Dev Process</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/kevindangoor.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="http://blueskyonmars.com/">Kevin Dangoor</a> on Dec 7, 2015 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/js-packaging-http2.htm">Forgo JS packaging? Not so fast</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/csilvers.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/csilvers">Craig Silverstein</a> on Nov 23, 2015 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/switching-to-slack.htm">Switching to Slack</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/benjaminpollack.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="http://bitquabit.com/">Benjamin Pollack</a> on Nov 9, 2015 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/receiving-feedback.htm">Receiving feedback as an intern at Khan Academy</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/davidwang.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="http://ourracingthoughts.com/author/d15w/">David Wang</a> on Oct 26, 2015 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/translation-server.htm">Schrödinger's deploys no more: how we update translations</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/chelseavoss.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://csvoss.github.io/">Chelsea Voss</a> on Oct 12, 2015 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/i18nize-templates.htm">i18nize-templates: Internationalization After the Fact</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/csilvers.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/csilvers">Craig Silverstein</a> on Sep 28, 2015 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/making-thumbnails-fast.htm">Making thumbnails fast</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/wchargin.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://wchargin.github.io">William Chargin</a> on Sep 14, 2015 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/copy-pasting-more-than-just-text.htm">Copy-pasting more than just text</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/samlau.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/SamLau95">Sam Lau</a> on Aug 31, 2015 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/no-cheating-allowed.htm">No cheating allowed!!</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/philliplemons.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://philliplemons.com/">Phillip Lemons</a> on Aug 17, 2015 </div> </div> <div class="post-blurb team-design"> <h3 class="title"> <a href="/posts/fun-with-slopfields.htm">Fun with slope fields, css and react</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/marcosojeda.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="http://generic.cx/">Marcos Ojeda</a> on Aug 5, 2015 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/new-employees-primer.htm">Khan Academy: a new employee's primer</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/rileyshaw.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://rileyjshaw.com">Riley Shaw</a> on Jul 20, 2015 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/evil-puzzle.htm">How wooden puzzles can destroy dev teams</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/johnsullivan.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/brownhead">John Sullivan</a> on Jul 6, 2015 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/i18n-babel-plugin.htm">Babel in Khan Academy's i18n Toolchain</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/kevinbarabash.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/kevinb7">Kevin Barabash</a> on Jun 22, 2015 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/tota11y.htm">tota11y - an accessibility visualization toolkit</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/jordanscales.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/jdan">Jordan Scales</a> on Jun 8, 2015 </div> </div> </section> <section class="meta-section"> <h2 class="section-heading">Meta</h2> <ul class="link-list"> <li><a href="https://github.com/Khan/engblog">About this blog</a></li> <li><a href="https://www.khanacademy.org/about">KA's mission</a></li> <li><a href="https://github.com/khan/engblog/issues">Report a bug</a></li> <li><a id="activate-tota11y" href="javascript: void 0">Activate tota11y</a></li> </ul> </section> </div> <main id="content"> <article class="post"> <h1 class="title"> <a href="/posts/python-refactor-3.htm"> Untangling our Python Code </a> </h1> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/carter.jpg" aria-hidden="true" role="presentation"> <span class="sr-only">by</span> <a class="author-link" href="http://carterjbastian.com/">Carter J. Bastian</a> on April 16<sup aria-hidden="true">th</sup> </div> <div class="body"> <p>The previous posts about The Great Khan Academy Python Refactor of 2017 and Also 2018 answered two questions: <a href="/posts/python-refactor-1.htm">why</a> and <a href="/posts/slicker.htm">how</a> did we refactor all of our Python code? In this post, I want to look closer at a major goal of this project: cleaning up dependencies between parts of our Python codebase.</p> <p>Going into the project, we decided that we would build a dependency order into the structure of our Python code. Below, we’ll look at why dependency order matters, what our solution looked like, and how we went about implementing it.</p> <h2>Why is dependency order important?</h2> <p>Take a look at a visual representation of Khan Academy’s code base:</p> <p><img alt="A picture of a huge dependency graph; little structure is visible amidst the tangle" src="/images/python-refactor-3/before_deps.png"></p> <p>Each dot in this image represents a module in our Python codebase. Each line represents an import of one module by another. tl;dr our Python code was a tangle!</p> <p>Our dependency tangle looped back on itself in complicated and frustrating ways that posed a series of problems:</p> <ul> <li>Code didn’t live where it "should", making it hard both for new developers to get oriented in the codebase and for experienced developers to find the particular functionality they’re looking for.</li> <li>Given an arbitrary change, we didn’t know what to test because we weren’t sure what code might indirectly use the code we changed.</li> <li>Intertwined dependencies made it difficult to draw boundaries between logically distinct parts of the codebase. This in turn made it harder to put stronger service-boundaries on our codebase.</li> </ul> <p>In short, we had a lot of problems stemming from poor code organization.</p> <p>In addition to these retroactive changes, our less-tangled codebase gives guidance to developers writing new code. Once we put in the work of defining what should and should not be depended on, we know to question any feature design that imports code from higher in the hierarchy. Since this dependency order is built directly into our code structure, we can automatically detect places in the codebase that are either poorly designed or poorly organized.</p> <h2>What does dependency order even mean?</h2> <p>In general, a dependency order is a set of rules deciding which files can be imported by a piece of code in a codebase. Some languages and frameworks implement dependency order by placing restrictions on possibly-problematic dependency practices. Since Python doesn't provide any such rules, we decided to write some of our own.</p> <p>We decided to create these rules by placing each Python file in our codebase into some conceptual bucket, which we call a "package", and then defining an ordering on these buckets. The ordering rule is that a file in bucket X can import a file in bucket Y if and only if Y is lower than X in the ordering.</p> <p>In other words, we divided all of our code into packages and placed these packages in a (mostly) linear order, where any given package is allowed to depend on packages lower than itself.</p> <h2>How we decided on the dependency ordering</h2> <p>It was not easy to decide how to order the packages. In theory any directed acyclic graph would be a legal ordering. But we decided to limit ourselves to a linear ordering, with one exception: we sometimes had several packages at the same "level". These packages could not depend on one another, but any package above them could depend on any (or all!) of them.</p> <p>We did this both to limit the universe of possible orderings, and to make it easier for humans to understand the final result. A linear ordering is easy to understand and explain to others.</p> <p>However, this did open up an issue that we sometimes had to order two totally unrelated packages, and arbitrarily decide which one was higher and which was lower. Sometimes we would decide by calculating the number of bad dependencies both ways, and seeing which led to fewer bad dependencies!</p> <h2>How we untangled our codebase</h2> <p>In order to define and enforce our new dependency ordering, we decided to have our 40 packages be top level directories. Any time a file in a lower-level package depends on a file in a higher-level package, we can classify that as a "bad dependency".</p> <p>By defining what can (and more importantly, what can't) be depended on by any given code feature, we can automatically detect places in our codebase that are architecturally problematic.</p> <p>Once we had a set of packages and their ordering figured out, the <strong>first step</strong> towards implementation was to move each file in our codebase into the appropriate package, as described in the earlier blog posts. This allowed us to reason about our codebase's dependency structure.</p> <p>For example, consider the following excerpt from our package list and their descriptions:</p> <blockquote> <p><code>lib/</code> - Miscellaneous libraries. Utilities with some Khan-specific logic that are still general enough to be used across many components.</p> <p><code>flags/</code> - Infrastructure implementing A/B testing and feature flagging.</p> <p><code>coaches/</code> - Contains core models and mechanics for coach/student (including parent/child and teacher/pupil). Also includes code related to classrooms and schools.</p> </blockquote> <p>These three packages above are listed in dependency order. In other words, it’s fine for the code in <code>flags/</code> to depend on the more-general code in <code>lib/</code>. Similarly, the higher-level code in <code>coaches/</code> implements the coach-student relationship, and should be able to use the lower-level infrastructure in <code>flags/</code> to set up coach/student-related experiments.</p> <p>Conversely, if a file in the <code>flags/</code> directory were to import a file from the <code>coaches/</code> directory, that would violate our dependency order and we would classify that as a "bad dependency". Conceptually, this feels right; for example, it doesn’t seem like good design for the infrastructure implementing experiments to depend on specific, product-level experiments.</p> <p>The <strong>second step</strong> in our process was to find the places where our code wasn’t following the new dependency rules. We used a script for this which output an HTML report on our dependencies.</p> <p>Specifically, this was big list of all the dependencies in our codebase broken down by package. For example, here’s an excerpt from one of our package reports listing the bad dependencies (in red) and good dependencies (in green) for one file in the <code>flags/</code> packages:</p> <blockquote> <p><strong>Flags:</strong></p> <ul> <li><strong>flags/experiments.py:</strong> depends on <span style="color:red">coaches/parents.py, coaches/students.py, coaches/teachers.py, sat/util.py, translations/videos.py,</span> <span style="color:green">flags/bigbingo/bigbingo.py, flags/bingo_identity.py, flags/feature_flags/core.py, flags/gandalf/bridge.py, intl/request.py, web/request/ip_util.py, web/request/url_util.py</span></li> </ul> <p>...</p> <p><strong>Diagnostic Report</strong></p> <p>Of 6787 total dependencies, there are 862 bad dependencies (12.700751%).</p> </blockquote> <p>As you can see, the example given above was an actual issue in our codebase; the experiment infrastructure was depending on the product logic underlying specific experiments in the <code>coaches/</code> package.</p> <p>The <strong>third and final step</strong> was to fix hubs of bad dependencies. This process changed on a case-by-case basis — the cause underlying bad dependencies could be anything from poorly designed code to poorly defined packages.</p> <p>More often than not, a file with lots of bad dependencies was indicative of bad code organization — either the file was in the wrong place, or the file was doing too many things. In these cases, we were able to use that code smell to refactor files relatively easily and improve our code organization.</p> <p>For example, consider the following excerpt from from <code>flags/experiments.py</code>, which has both a function used for logging opt-in experiments, and also a function used to determine if a user is in a classroom so that we can consider showing them coach-related experiments:</p> <div class="codehilite"><pre><span class="kn">from</span> <span class="nn">__future__</span> <span class="kn">import</span> <span class="n">absolute_import</span>

<span class="kn">import</span> <span class="nn">coaches.students</span>  <span class="c"># BAD DEPENDENCY</span>
<span class="kn">import</span> <span class="nn">coaches.teachers</span>  <span class="c"># BAD DEPENDENCY</span>

<span class="k">def</span> <span class="nf">log_opt_in_experiment_event</span><span class="p">(</span><span class="n">user_id</span><span class="p">,</span> <span class="n">experiment_name</span><span class="p">,</span>
                                <span class="n">event</span><span class="p">):</span>
    <span class="c"># ... add analytics for an event</span>

<span class="k">def</span> <span class="nf">is_classroom_user</span><span class="p">(</span><span class="n">user_data</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;Determine if user is shown classroom A/B tests&quot;&quot;&quot;</span>
    <span class="k">if</span> <span class="n">coaches</span><span class="o">.</span><span class="n">teachers</span><span class="o">.</span><span class="n">classified_as_teacher</span><span class="p">(</span><span class="n">user_data</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">CLASSROOM_USER</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">user_data</span><span class="o">.</span><span class="n">classroom_user_status</span> <span class="o">!=</span> 
            <span class="n">UNKNOWN_CLASSROOM_STATUS</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">user_data</span><span class="o">.</span><span class="n">classroom_user_status</span>

    <span class="n">coaches</span><span class="o">.</span><span class="n">students</span><span class="o">.</span><span class="n">defer_classroom_status_update</span><span class="p">(</span>
        <span class="n">user_data</span><span class="p">,</span> <span class="n">caller</span><span class="o">=</span><span class="s">&#39;is_classroom_user&#39;</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">user_data</span><span class="o">.</span><span class="n">NOT_CLASSROOM_USER</span>
</pre></div> <p>In this experiment, the bad dependencies are coming from the second function, and they indicate a valid organizational problem: <code>is_classroom_user</code> boils down to an implementation detail for coaching-specific experiments. Since, implementation of specific experiments is outside the scope of experiment infrastructure, <code>flags/experiments.py</code> is trying to do something outside the scope of its package.</p> <p>Thankfully, this is a pretty easy fix: we can just use slicker to move the offending function to wherever the coach-related experiments actually live (in this case, <code>coaches/experiments.py</code>).</p> <p>After moving this function, flags/experiments.py won’t depend on <code>coaches.teachers</code> or <code>coaches.students</code>, and our updated package report will look like this:</p> <blockquote> <p><strong>Flags:</strong></p> <ul> <li><strong>flags/experiments.py:</strong> depends on <span style="color:red">coaches/parents.py, sat/util.py, translations/videos.py,</span> <span style="color:green">flags/bigbingo/bigbingo.py, flags/bingo_identity.py, flags/feature_flags/core.py, flags/gandalf/bridge.py, intl/request.py, web/request/ip_util.py, web/request/url_util.py</span></li> </ul> <p>...</p> <p><strong>Diagnostic Report</strong></p> <p>Of 6787 total dependencies, there are 860 bad dependencies (12.67128%).</p> </blockquote> <p>And just like that, our codebase is two bad dependencies cleaner. Of course, the fixes are rarely so small or straight-forward. We’d often find tangles of poor code structure that would decrease bad dependencies by quite a bit. The process was roughly the same though and can continue ad infinitum; given more time to work on the project, we’d simply iterate on steps two and three (looking for bad dependencies and then breaking them up) making the codebase incrementally cleaner.</p> <h2>The results</h2> <p>On one hand, we weren’t able to get rid of all of our bad dependencies – we still have a whitelist of about 750 imports that violate our new rules.</p> <p>On the other hand, getting to a codebase that exactly matches our self-imposed dependency structure doesn’t prevent us from getting much of the benefit that such an architecture provides. Even with the many exceptions to our new dependency restrictions, it is much easier to reason about where functionality lives and how to test a given piece of code.</p> <p>To start, one big win is that we were able to record a measurable improvement in our codebase’s structure! Having 1) built out a formalized notion of what a bad dependency is and 2) written tools for finding them in our codebase, we've been able to measure the "goodness" of our dependency structure over the course of the project.</p> <p>When we first took this measurement, we found that about 15.2% of all of our inter-package dependencies were bad. Taking this measurement the codebase in production right after the end of the project, we had reduced the percent of bad dependencies to 7.8%.</p> <p>7.8% may still seem like a lot, but you can visually see the difference. Below is the dependency graph generated after our changes. Compared to the first tangle, we see that a lot of the dependencies that had been scattered all over the place have now been concentrated into a few clusters around our inter-package APIs, making the tangle appear... lighter.</p> <p><img alt="A picture of a huge dependency graph; there is still a tangle at the center but there are some other, more distinct groupings" src="/images/python-refactor-3/after_deps.png"></p> <p>What’s more, the benefits of this continue to help us develop clean code quickly. We now have a check that’s run at commit time that will let you know if your changes added a new bad import. In other words, you can’t accidentally introduce dependencies on higher-level code; if you’re going to violate the new rules, you have to do so explicitly.</p> <p>These effects, in tandem with the clean-ups and refactors that came along with our dependency-chasing process above, left our codebase in a good place. Our self-imposed dependency order will help us develop faster and better in 2018 and beyond.</p> <p><em>Big thanks to all of my teammates who helped get this blogpost from its draft to publish, especially Kevin Dangoor, Scott Grant, Ben Kraft, and Craig Silverstein.</em></p> </div> </article> <div class="keep-reading-buttons"> <div class="keep-reading-cell keep-reading-left"> <div class="button prev-post-button team-infrastructure"> <div class="header">previous post</div> <a href="/posts/slicker.htm" class="post-title">Slicker: A Tool for Moving Things in Python</a> </div> </div> <div class="keep-reading-cell keep-reading-right"> <div class="button next-post-button team-infrastructure"> <div class="header">next post</div> <a href="/posts/khanalytics.htm" class="post-title">New data pipeline management platform at Khan Academy</a> </div> </div> </div> </main> <script>document.getElementById("mobile-menu-button").onclick=function(){var e=document.body,t=document.getElementById("left-bar"),a=document.getElementById("content");"mobile-visible"===t.className?(e.className="",t.className="",a.className=""):(e.className="mobile-menu-visible",t.className="mobile-visible",a.className="mobile-hidden")};var totallyActivated=!1;document.getElementById("activate-tota11y").onclick=function(){if(totallyActivated)console.log("Tota11y already activated. Doing nothing.");else{var e=document.createElement("script");e.src="/javascript/tota11y.min.js",document.head.appendChild(e),totallyActivated=!0}},function(e,t,a,n,c,l,o){e.GoogleAnalyticsObject=c,e.ga=e.ga||function(){(e.ga.q=e.ga.q||[]).push(arguments)},e.ga.l=1*new Date,l=t.createElement(a),o=t.getElementsByTagName(a)[0],l.async=1,l.src="//www.google-analytics.com/analytics.js",o.parentNode.insertBefore(l,o)}(window,document,"script",0,"ga"),ga("create","UA-65856931-1","auto"),ga("send","pageview");</script> </body> </html> 