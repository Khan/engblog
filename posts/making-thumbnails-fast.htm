<!DOCTYPE html> <html> <head> <title>Making thumbnails fast | Khan Academy Engineering</title> <link rel="icon" href="/images/favicon.ico"> <meta http-equiv="Content-Type" content="text/html;charset=utf-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <meta name="description" content="We're the engineers behind Khan Academy. We're building a free, world-class education for anyone, anywhere.">  <style>#left-bar .bio a,#left-bar .logo a{text-decoration:none}#left-bar .logo,#left-bar .subscription-info{text-align:left}.c,.c1,.caption,.cm,.cs,.ge,caption,figcaption{font-style:italic}body,html{height:100%;margin:0}body{font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;background-color:#FEFEFE;font-size:14px;width:920px}@media (max-width:920px){body{width:100%}body.mobile-menu-visible{background-color:#252F3D}}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.inline-author-photo{height:1.6em;width:1.6em;border-radius:.8em;vertical-align:middle;margin-right:4px}.font-awesome-svg{width:1em;height:1em;display:inline-block}#left-bar{box-sizing:border-box;display:table-cell;background-color:#252F3D;color:#f0f0f0;width:325px;padding:10px 35px 35px}@media (max-width:920px){#left-bar{display:block;width:100%;padding:0 20px}#left-bar.mobile-visible{padding-bottom:60px}#left-bar:not(.mobile-visible) section{display:none}}#left-bar .logo{font-family:"Arial Black","Arial Bold",Gadget,sans-serif;font-size:28px;letter-spacing:1px;line-height:1em;margin-bottom:6px;margin-left:-2px;margin-top:0;text-transform:uppercase}#left-bar .logo a{color:#f0f0f0}#left-bar .logo.mobile{font-size:24px;display:none}@media (max-width:920px){#left-bar .logo.mobile{display:block}#left-bar .logo.mobile a{padding:11px 20px 15px;margin:0 -20px -15px;display:block;text-decoration:none;color:#f0f0f0}#left-bar .logo.mobile svg{opacity:.8;margin-right:-2px;margin-top:1px;height:25px}#left-bar .logo.mobile .text,#left-bar .logo.mobile svg{vertical-align:middle}#left-bar .logo{display:none}}#left-bar .logo .engineering{color:#9cb53b}#left-bar .bio{font-size:12px;line-height:1.4;margin-top:10px}#left-bar .bio,#left-bar .bio *{color:#dbdcde}#left-bar .bio a:hover{text-decoration:underline}#left-bar .subscription-info .links{font-size:24px}#left-bar .subscription-info .links a{margin-right:7px;text-decoration:none;color:#f0f0f0}#left-bar .subscription-info .links a:hover{border-bottom:1px solid #f0f0f0}#left-bar .subscription-info .links .email{margin-top:-1px}#left-bar .section-heading{color:#dbdcde;font-size:12px;font-weight:300;letter-spacing:.5px;margin-top:40px;text-transform:lowercase}#left-bar .post-blurb{margin-top:30px;padding-bottom:4px;border-left:1px solid transparent;padding-left:10px;margin-left:-10px}@media (max-width:920px){#left-bar .post-blurb{border-left:10px solid transparent;padding-left:17px;margin-left:-26px}}#left-bar .post-blurb:first-of-type{margin-top:20px}#left-bar .post-blurb.team-infrastructure{border-color:#E57281}#left-bar .post-blurb.team-web-frontend{border-color:#63BBD9}#left-bar .post-blurb.team-mobile{border-color:#63BB81}#left-bar .post-blurb.team-eng-leads{border-color:#ccc}#left-bar .post-blurb.team-design{border-color:#ab59c6}#left-bar .post-blurb.team-wtf{border-color:#ff00af}#left-bar .post-blurb .title{font-weight:400;margin:0 0 9px}#left-bar .post-blurb .title a{color:#f0f0f0;text-decoration:none}#left-bar .post-blurb .title a:hover{text-decoration:underline}#left-bar .post-blurb .info{font-size:12px}#left-bar .post-blurb .info .author-link{color:#f0f0f0;text-decoration:none;font-weight:700;font-size:11px}#left-bar .post-blurb .info .author-link:hover{text-decoration:underline}#left-bar .meta-section .link-list{margin:0 0 0 4px;padding:0;list-style-type:square}#left-bar .meta-section .link-list li{margin-bottom:10px}#left-bar .meta-section .link-list li a{margin-left:-4px}#left-bar .meta-section .link-list a{color:#f0f0f0;text-decoration:none}#left-bar .meta-section .link-list a:hover{text-decoration:underline}#content{display:table-cell;padding:10px 35px 35px 50px;color:#404040}@media (max-width:920px){#left-bar .meta-section .link-list{list-style-type:none}#content{padding:10px 20px 50px;display:block}#content.mobile-hidden{display:none}}#content .title a{letter-spacing:1px;margin-bottom:8px;font-size:28px;line-height:1;color:#404040;text-decoration:none}#content .title a:focus,#content .title a:hover{text-decoration:underline}#content .info .author-link{color:#404040;font-weight:700;text-decoration:none}#content .info .author-link:hover{text-decoration:underline}#content .info .team-tag{border-radius:.3em;padding:.3em .8em;font-size:.7em;font-weight:500;display:inline-block;color:#fff;margin-left:4px;margin-right:4px}.cp,.cs,.gs,.k,.kc,.kd,.kn,.kp,.kr,.kt,.nc,.ne,.nf,.o,.ow{font-weight:700}#content .info .team-tag.web-frontend{background-color:#63BBD9}#content .body{margin-top:30px;line-height:1.5;width:500px}@media (max-width:920px){#content .body{width:100%}}#content .body a{color:#6c7d28;text-decoration:none}#content .body a:hover{text-decoration:underline}#content .body img{max-width:100%}#content .keep-reading-buttons{display:table;margin-top:30px;width:100%}#content .keep-reading-buttons .keep-reading-cell{display:table-cell;margin:0;padding:0;vertical-align:top;width:50%}#content .keep-reading-buttons .keep-reading-right{text-align:right}#content .keep-reading-buttons .button{padding:3px 0;display:inline-block;max-width:90%;color:#404040}#content .keep-reading-buttons .button .header{font-size:12px;color:#767676}#content .keep-reading-buttons .button .post-title{margin-top:8px;color:#6c7d28;text-decoration:none;display:block}#content .keep-reading-buttons .button .post-title:hover{text-decoration:underline}#content .keep-reading-buttons .button.next-post-button{border-right:2px solid;padding-right:10px;margin-right:-10px}#content .keep-reading-buttons .button.prev-post-button{border-left:2px solid;padding-left:10px;margin-left:-10px}#content .keep-reading-buttons .button.team-infrastructure{border-color:#E57281}#content .keep-reading-buttons .button.team-web-frontend{border-color:#63BBD9}#content .keep-reading-buttons .button.team-eng-leads{border-color:#ccc}#content .keep-reading-buttons .button.team-design{border-color:#ab59c6}.code,.codehilite{background-color:#EEE;border-radius:6px;border:1px solid #CCC;overflow-x:auto;padding:6px;margin:14px 0}.code .ln,.codehilite .ln{color:#AAA}.label{margin-top:1.5em}.caption{text-align:center}caption,table.data-table th{text-align:left}.align-center{display:block;margin-left:auto;margin-right:auto}.literal,code{word-wrap:break-word}caption{caption-side:bottom}table.data-table{margin:0 auto}table.data-table td{text-align:right}table.data-table td,table.data-table th{padding:0 5px;white-space:nowrap}.x-scrollable{overflow-x:auto}.hll{background-color:#ffc}.c{color:#998}.err{color:#a61717;background-color:#e3d2d2}.cm{color:#998}.cp{color:#999}.c1{color:#998}.cs{color:#999}.gd{color:#000;background-color:#fdd}.gr{color:#a00}.gh{color:#999}.gi{color:#000;background-color:#dfd}.go{color:#888}.gp{color:#555}.gu{color:#aaa}.gt{color:#a00}.kt{color:#458}.m{color:#099}.s{color:#b84}.na{color:teal}.nb{color:#999}.nc{color:#458}.no{color:teal}.ni{color:purple}.ne,.nf{color:#900}.nn{color:#555}.nt{color:navy}.nv{color:teal}.w{color:#bbb}.mf,.mh,.mi,.mo{color:#099}.s2,.sb,.sc,.sd,.se,.sh,.si,.sx{color:#b84}.sr{color:olive}.s1,.ss{color:#b84}.bp{color:#999}.vc,.vg,.vi{color:teal}.il{color:#099}</style>  <script async src="https://cdn.rawgit.com/Khan/KaTeX/v0.6.0/dist/katex.min.js"></script> <script async src="https://cdn.rawgit.com/Khan/KaTeX/v0.6.0/dist/contrib/auto-render.min.js"></script> <link rel="stylesheet" href="https://cdn.rawgit.com/Khan/KaTeX/v0.6.0/dist/katex.min.css"> </head> <body> <div id="left-bar"> <h1 class="logo"> <a href="/"><span aria-label="Khan Academy">KA</span> <span class="engineering">Engineering</span></a> </h1> <h1 class="logo mobile">  <a id="mobile-menu-button" href="javascript: void 0"> <svg class="font-awesome-svg" viewbox="0 0 1792 1792" aria-hidden="true"><path d="M1664 1344v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm0-512v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm0-512v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45z" fill="#fff"/></svg> <span class="text"><span aria-label="Khan Academy">KA</span> <span class="engineering">Engineering</span></span> </a> </h1> <section class="bio"> We're the engineers behind <a href="https://www.khanacademy.org">Khan Academy</a>. We're building a free, world-class education for anyone, anywhere. </section> <section class="subscription-info"> <h2 class="section-heading">Subscribe</h2> <div class="links"> <a href="https://twitter.com/KAEngineering"><span class="sr-only">Subscribe with Twitter</span><svg class="font-awesome-svg" viewbox="0 0 1792 1792" aria-hidden="true"><path d="M1684 408q-67 98-162 167 1 14 1 42 0 130-38 259.5t-115.5 248.5-184.5 210.5-258 146-323 54.5q-271 0-496-145 35 4 78 4 225 0 401-138-105-2-188-64.5t-114-159.5q33 5 61 5 43 0 85-11-112-23-185.5-111.5t-73.5-205.5v-4q68 38 146 41-66-44-105-115t-39-154q0-88 44-163 121 149 294.5 238.5t371.5 99.5q-8-38-8-74 0-134 94.5-228.5t228.5-94.5q140 0 236 102 109-21 205-78-37 115-142 178 93-10 186-50z" fill="#fff"/></svg></a> <a href="/rss.xml"><span class="sr-only">Subscribe with RSS</span><svg class="font-awesome-svg" viewbox="0 0 1792 1792" aria-hidden="true"><path d="M576 1344q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm512 123q2 28-17 48-18 21-47 21h-135q-25 0-43-16.5t-20-41.5q-22-229-184.5-391.5t-391.5-184.5q-25-2-41.5-20t-16.5-43v-135q0-29 21-47 17-17 43-17h5q160 13 306 80.5t259 181.5q114 113 181.5 259t80.5 306zm512 2q2 27-18 47-18 20-46 20h-143q-26 0-44.5-17.5t-19.5-42.5q-12-215-101-408.5t-231.5-336-336-231.5-408.5-102q-25-1-42.5-19.5t-17.5-43.5v-143q0-28 20-46 18-18 44-18h3q262 13 501.5 120t425.5 294q187 186 294 425.5t120 501.5z" fill="#fff"/></svg></a> </div> </section> <section> <h2 class="section-heading">Latest posts</h2> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/slicker.htm">Slicker: A Tool for Moving Things in Python</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/ben-kraft.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://www.benkraft.org/">Ben Kraft</a> on April 2<sup aria-hidden="true">nd</sup> </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/python-refactor-1.htm">The Great Python Refactor of 2017 And Also 2018</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/csilvers.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/csilvers">Craig Silverstein</a> on March 19<sup aria-hidden="true">th</sup> </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/working-remotely.htm">Working Remotely</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/scottgrant.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/scotchfield">Scott Grant</a> on Oct 2, 2017 </div> </div> <div class="post-blurb team-mobile"> <h3 class="title"> <a href="/posts/tips-for-code-reviews.htm">Tips for giving your first code reviews</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/hannah.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="http://hannahblumberg.com/">Hannah Blumberg</a> on Sep 18, 2017 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/lets-reduce.htm">Let's Reduce! A Gentle Introduction to Javascript's Reduce Method</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/joshcomeau.jpeg" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/joshwcomeau">Josh Comeau</a> on Jul 10, 2017 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/creating-query-components-with-apollo.htm">Creating Query Components with Apollo</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/brian-genisio.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/BrianGenisio">Brian Genisio</a> on Jun 12, 2017 </div> </div> <div class="post-blurb team-mobile"> <h3 class="title"> <a href="/posts/react-native-monorepo.htm">Migrating to a Mobile Monorepo for React Native</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/jared.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="http://jaredforsyth.com/">Jared Forsyth</a> on May 29, 2017 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/memcached-fms.htm">Memcached-Backed Content Infrastructure</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/ben-kraft.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://www.benkraft.org/">Ben Kraft</a> on May 15, 2017 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/memcached-profiling.htm">Profiling App Engine Memcached</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/ben-kraft.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://www.benkraft.org/">Ben Kraft</a> on May 1, 2017 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/flex-language-shootout.htm">App Engine Flex Language Shootout</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/amos-latteier.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/latteier">Amos Latteier</a> on Apr 17, 2017 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/new-oss-activity.htm">What's New in OSS at Khan Academy</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/brian-genisio.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/BrianGenisio">Brian Genisio</a> on Apr 3, 2017 </div> </div> <div class="post-blurb team-mobile"> <h3 class="title"> <a href="/posts/automating-app-store-screenshots.htm">Automating App Store Screenshots</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/bryanclark.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://www.bryanjclark.com/">Bryan Clark</a> on Mar 27, 2017 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/its-okay-to-break-things.htm">It's Okay to Break Things: Reflections on Khan Academy's Healthy Hackathon</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/kimeriegreen.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/Kimerie">Kimerie Green</a> on Mar 6, 2017 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/interning-at-khan-academy.htm">Interning at Khan Academy: from student to intern</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/shadajladdad.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://shadaj.me">Shadaj Laddad</a> on Dec 12, 2016 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/prototyping-with-framer.htm">Prototyping with Framer</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/nickbreen.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/MrNickBreen">Nick Breen</a> on Oct 3, 2016 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/evolving-our-content-infrastructure.htm">Evolving our content infrastructure</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/wchargin.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://wchargin.github.io">William Chargin</a> on Sep 19, 2016 </div> </div> <div class="post-blurb team-mobile"> <h3 class="title"> <a href="/posts/a-really-small-app.htm">Building a Really, Really Small Android App</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/charliemarsh.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="http://www.crmarsh.com">Charlie Marsh</a> on Aug 22, 2016 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/a-case-for-time-tracking.htm">A Case for Time Tracking: Data Driven Time-Management</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/olivernorthwood.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/allofthenorthwood">Oliver Northwood</a> on Aug 8, 2016 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/time-management-multiple-authors.htm">Time Management at Khan Academy</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/khanacademy.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://www.khanacademy.org/careers">Several Authors</a> on Jul 25, 2016 </div> </div> <div class="post-blurb team-eng-leads"> <h3 class="title"> <a href="/posts/healthy-hackathons.htm">Hackathons Can Be Healthy</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/tomyedwab.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://www.arguingwithalgorithms.com">Tom Yedwab</a> on Jul 11, 2016 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/transaction-safety.htm">Ensuring transaction-safety in Google App Engine</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/csilvers.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/csilvers">Craig Silverstein</a> on Jun 27, 2016 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/user-write-lock.htm">The User Write Lock: an Alternative to Transactions for Google App Engine</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/csilvers.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/csilvers">Craig Silverstein</a> on Jun 20, 2016 </div> </div> <div class="post-blurb team-eng-leads"> <h3 class="title"> <a href="/posts/engineering-principles.htm">Khan Academy's Engineering Principles</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/benkamens.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://bjk5.com">Ben Kamens</a> on Jun 6, 2016 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/shortest-regex.htm">Minimizing the length of regular expressions, in practice</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/csilvers.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/csilvers">Craig Silverstein</a> on May 23, 2016 </div> </div> <div class="post-blurb team-mobile"> <h3 class="title"> <a href="/posts/introducing-swifttweaks.htm">Introducing SwiftTweaks</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/bryanclark.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://www.bryanjclark.com/">Bryan Clark</a> on May 9, 2016 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/autonomous-dumbledore.htm">The Autonomous Dumbledore</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/evykassirer.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://www.evykassirer.com/">Evy Kassirer</a> on Apr 25, 2016 </div> </div> <div class="post-blurb team-eng-leads"> <h3 class="title"> <a href="/posts/career-development.htm">Engineering career development at Khan Academy</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/beneater.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/beneater">Ben Eater</a> on Apr 11, 2016 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/aphrodite-inline-css.htm">Inline CSS at Khan Academy: Aphrodite</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/jamiewong.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://jamie-wong.com">Jamie Wong</a> on Mar 29, 2016 </div> </div> <div class="post-blurb team-mobile"> <h3 class="title"> <a href="/posts/starting-android.htm">Starting Android at Khan Academy</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/benkomalo.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/benkomalo">Ben Komalo</a> on Feb 29, 2016 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/translation_assistant.htm">Automating Highly Similar Translations</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/kevinbarabash.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/kevinb7">Kevin Barabash</a> on Feb 15, 2016 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/snippet-server.htm">The weekly snippet-server: open-sourced</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/csilvers.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/csilvers">Craig Silverstein</a> on Feb 1, 2016 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/stories-from-interns.htm">Stories from our latest intern class</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/khanacademy.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://www.khanacademy.org/careers/interns">2015 Interns</a> on Dec 21, 2015 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/kanbanning-learnstorm-dev-process.htm">Kanbanning the LearnStorm Dev Process</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/kevindangoor.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="http://blueskyonmars.com/">Kevin Dangoor</a> on Dec 7, 2015 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/js-packaging-http2.htm">Forgo JS packaging? Not so fast</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/csilvers.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/csilvers">Craig Silverstein</a> on Nov 23, 2015 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/switching-to-slack.htm">Switching to Slack</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/benjaminpollack.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="http://bitquabit.com/">Benjamin Pollack</a> on Nov 9, 2015 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/receiving-feedback.htm">Receiving feedback as an intern at Khan Academy</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/davidwang.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="http://ourracingthoughts.com/author/d15w/">David Wang</a> on Oct 26, 2015 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/translation-server.htm">Schrödinger's deploys no more: how we update translations</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/chelseavoss.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://csvoss.github.io/">Chelsea Voss</a> on Oct 12, 2015 </div> </div> <div class="post-blurb team-infrastructure"> <h3 class="title"> <a href="/posts/i18nize-templates.htm">i18nize-templates: Internationalization After the Fact</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/csilvers.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/csilvers">Craig Silverstein</a> on Sep 28, 2015 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/making-thumbnails-fast.htm">Making thumbnails fast</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/wchargin.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://wchargin.github.io">William Chargin</a> on Sep 14, 2015 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/copy-pasting-more-than-just-text.htm">Copy-pasting more than just text</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/samlau.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/SamLau95">Sam Lau</a> on Aug 31, 2015 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/no-cheating-allowed.htm">No cheating allowed!!</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/philliplemons.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://philliplemons.com/">Phillip Lemons</a> on Aug 17, 2015 </div> </div> <div class="post-blurb team-design"> <h3 class="title"> <a href="/posts/fun-with-slopfields.htm">Fun with slope fields, css and react</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/marcosojeda.jpg" aria-hidden="true" role="presentation"> <a class="author-link" href="http://generic.cx/">Marcos Ojeda</a> on Aug 5, 2015 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/new-employees-primer.htm">Khan Academy: a new employee's primer</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/rileyshaw.png" aria-hidden="true" role="presentation"> <a class="author-link" href="http://rileyjshaw.com">Riley Shaw</a> on Jul 20, 2015 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/evil-puzzle.htm">How wooden puzzles can destroy dev teams</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/johnsullivan.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/brownhead">John Sullivan</a> on Jul 6, 2015 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/i18n-babel-plugin.htm">Babel in Khan Academy's i18n Toolchain</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/kevinbarabash.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/kevinb7">Kevin Barabash</a> on Jun 22, 2015 </div> </div> <div class="post-blurb team-web-frontend"> <h3 class="title"> <a href="/posts/tota11y.htm">tota11y - an accessibility visualization toolkit</a> </h3> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/jordanscales.png" aria-hidden="true" role="presentation"> <a class="author-link" href="https://github.com/jdan">Jordan Scales</a> on Jun 8, 2015 </div> </div> </section> <section class="meta-section"> <h2 class="section-heading">Meta</h2> <ul class="link-list"> <li><a href="https://github.com/Khan/engblog">About this blog</a></li> <li><a href="https://www.khanacademy.org/about">KA's mission</a></li> <li><a href="https://github.com/khan/engblog/issues">Report a bug</a></li> <li><a id="activate-tota11y" href="javascript: void 0">Activate tota11y</a></li> </ul> </section> </div> <main id="content"> <article class="post"> <h1 class="title"> <a href="/posts/making-thumbnails-fast.htm"> Making thumbnails fast </a> </h1> <div class="info"> <img class="inline-author-photo" src="/images/author-icons/wchargin.png" aria-hidden="true" role="presentation"> <span class="sr-only">by</span> <a class="author-link" href="https://wchargin.github.io">William Chargin</a> on Sep 14, 2015 </div> <div class="body"> <p><em>This article has a bit of exposition. The fun stuff starts in “Matrix magic.”</em></p> <p>Video thumbnails are a great way to grab users’ attention. YouTube even provides <a href="https://creatoracademy.withgoogle.com/page/lesson/tell-a-story-through-your-thumbnail-title-description">guides</a> for content creators about how to create compelling thumbnails. Until now, however, Khan Academy videos have always used the default YouTube thumbnails—just a screenshot of a video frame—and, given the nature of our content, these are almost always just black rectangles.</p> <p>As part of our content library redesign initiative, we’re giving thumbnails a higher priority. We decided to enable our content creators to upload custom images and set custom title text for videos, and went through many design iterations before settling on a clean, bold, and eye-catching thumbnail design. Here are two examples:</p> <p><img alt="Sample thumbnail for the math video on interpreting histograms" src="/images/thumbnails/sample_interpreting_histograms.png"> <img alt="Sample thumbnail for the science video about sarcoplasmic reticulum" src="/images/thumbnails/sample_sarcoplasmic_reticulum.png"></p> <p>The process for generating those thumbnail images from the source image (which you can see in the background) is as follows:</p> <ol> <li> <p>Resize the source image to fill $1280 \times 720$ pixels.</p> </li> <li> <p>Desaturate the image by $50\%$.</p> </li> <li> <p>Lighten the image by $50\%$.</p> </li> <li> <p>Multiply the image with the third-darkest domain color (blue for math, red for science, etc.).</p> </li> <li> <p>Overlay the text and Khan Academy logo.</p> </li> </ol> <p>You might be wondering what it means to “multiply” an image! The color data for each pixel of an image is stored in three components: red, green, and blue (RGB). To multiply two pixels, you multiply the values of their individual components, so $$(r_1, g_1, b_1) \cdot (r_2, g_2, b_2) = (r_1 \, r_2, g_1 \, g_2, b_1 \, b_2).$$</p> <p>For example, yellow $(1, 1, 0)$ multiplied with light cyan $(\frac{1}{2}, 1, 1)$ yields greenish-yellow $(\frac{1}{2}, 1, 0)$.</p> <p>The qualitative effects of the multiply filter are that black multiplied with anything stays black ($0x = 0$), white multiplied by anything doesn’t change the original color $(1x = x$), and other colors are tinted to match the multiply color.</p> <p>Performing these kinds of image manipulations efficiently is essentially a solved problem. There are many freely available software toolkits that would be more than sufficient for our needs. However, our server infrastructure doesn't allow us to use those libraries, so we ended up implementing these operations ourselves. In the process, we learned a lot about how these operations really work, so we wanted to share that knowledge with you!</p> <h2>How could we do this?</h2> <p>I&nbsp;had previously written some code to generate simpler thumbnails from a previous design, so I&nbsp;started by updating that code to generate the new thumbnails. The old code used PIL (the Python Imaging Library) for its image operations, because that’s the only such library supported by App Engine. In cases where PIL lacked functionality or produced unacceptably poor results, I&nbsp;had re-implemented some operations in numpy.</p> <p>All three of the core operations we needed to perform—desaturate, lighten, and multiply—can be implemented on a per-pixel basis. That is, the output value of a pixel only depends on the original value for that pixel, not on any surrounding pixels (as with, e.g., a blur). PIL offers the <code>PIL.Image.point(self, fn)</code> function, which applies a given function to every pixel. At first glance, this seems perfect. However, further inspection reveals that this actually transforms each <em>channel</em> individually as well—that is, the value for the new red component can’t depend on the original green or blue. This would only work for lightening; it doesn’t provide enough information to work for desaturating or multiplying.</p> <p>So, as before, I&nbsp;turned to numpy. I&nbsp;exported the image data to a 3D numpy array (such that <code>arr[x][y][c]</code> stores channel $c$ of pixel $(x, y)$). After searching the numpy docs, I&nbsp;found the <code>apply_along_axis</code> function, which let me apply a function to each pixel (the “$z$ axis” of my 3D array). For example, the following snippet averages the values of each component, so that $(r, g, b)$ becomes $(a, a, a)$, where $a = (r + g + b) / 3$:</p> <div class="codehilite"><pre><span class="kn">import</span> <span class="nn">numpy</span> <span class="kn">as</span> <span class="nn">np</span>
<span class="n">image</span> <span class="o">=</span> <span class="n">load_original_image</span><span class="p">();</span>
<span class="kp">array</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="kp">asarray</span><span class="p">(</span><span class="n">image</span><span class="p">);</span>
<span class="n">transformed</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="kp">apply_along_axis</span><span class="p">(</span>
    <span class="k">lambda</span> <span class="n">px</span><span class="p">:</span> <span class="n">np</span><span class="o">.</span><span class="kp">ones</span><span class="p">(</span><span class="n">px</span><span class="o">.</span><span class="kp">shape</span><span class="p">)</span> <span class="o">*</span> <span class="nb">sum</span><span class="p">(</span><span class="n">px</span><span class="p">[:</span><span class="mi">3</span><span class="p">])</span> <span class="o">/</span> <span class="mf">3.0</span><span class="p">),</span>
    <span class="mi">2</span><span class="p">,</span>  <span class="c"># z-axis</span>
    <span class="kp">array</span><span class="p">)</span>
</pre></div> <p>I&nbsp;created a simple function to transform any given pixel, and used <code>apply_along_axis</code> to apply it to the whole image. This approach worked.</p> <p>It also took 35 seconds per thumbnail at $1280 \times 720$ pixels.</p> <p>This was unacceptable.</p> <h2>How could we do this better?</h2> <p>I&nbsp;profiled the code and determined that only a negligible part was being spent outside of core computations (under $20\%$). This meant that I&nbsp;wouldn’t be able to rely on Python-level optimizations to get the kind of speed we needed. So I&nbsp;started browsing the PIL documentation looking for ways to do this at a lower level. The <code>ImageMath</code>, <code>ImageColor</code>, and <code>ImageFilter</code> modules were no help. But then <a href="http://andymatuschak.org/">Andy</a> discovered that PIL’s method for converting between color spaces allows the user to pass an arbitrary transformation matrix as an argument:</p> <blockquote> <p><code>im.convert(mode, matrix)</code> $\Rightarrow$ <em>image</em></p> <blockquote> <p>Converts an “RGB” image to “L” or “RGB” using a conversion matrix. The matrix is a 4- or 16-tuple.</p> </blockquote> </blockquote> <p>Initially, I&nbsp;discounted this function because a 16-tuple would require a $4 \times 4$ transformation matrix, which didn’t seem appropriate for this use (I&nbsp;expected to use a $3 \times 4$ affine matrix). But then I&nbsp;looked more closely at the example:</p> <div class="codehilite"><pre>rgb2xyz = (
    0.412453, 0.357580, 0.180423, 0,
    0.212671, 0.715160, 0.072169, 0,
    0.019334, 0.119193, 0.950227, 0 )
out = im.convert(&quot;RGB&quot;, rgb2xyz)
</pre></div> <p>The provided matrix was a 12-tuple, exactly as I&nbsp;wanted! So I&nbsp;looked at the PIL source and found, on line 767 of <code>imaging.c</code>,</p> <div class="codehilite"><pre>if (!PyArg_ParseTuple(args, &quot;s(ffffffffffff)&quot;, ...)) {
    return NULL;
}
</pre></div> <p>I’m no expert on Python’s C&nbsp;extensions, but there are clearly twelve <em>f</em>s there, and if that’s anything like the JNI interop, it means that the C&nbsp;code expects Python to pass it a 12-tuple of floats. This agrees with the example, and shows that the documentation is just wrong. (<strong>edit:</strong> The Pillow team has since fixed this! The documentation will be correct in new versions of Pillow.)</p> <p>So this was good news! This meant that if I&nbsp;could express all our image manipulation in terms of affine transforms, we’d be able to use this function. I&nbsp;expected that this would be significantly faster, both because it’s running in C&nbsp;land and because it just has to perform a matrix multiplication on each pixel, and processors are really good at that.</p> <h2>Matrix magic</h2> <p>This was the fun part. I&nbsp;needed to figure out what matrix to multiply the pixels by to create the proper transforms.</p> <blockquote> <p><strong>Heads up:</strong> This section assumes knowledge of matrix multiplication. If you want to learn the minimum necessary to proceed, check out our video on <a href="https://www.khanacademy.org/math/precalculus/precalc-matrices/matrix_multiplication/v/multiplying-a-matrix-by-a-matrix">matrix–matrix multiplication</a>. If you want to learn more about the underlying theory and why this works, check out our topic about <a href="https://www.khanacademy.org/math/linear-algebra/matrix_transformations">matrix transformations</a>, which discusses linear transformations! (Affine transformations are extension of linear transformations.)</p> </blockquote> <p>For now, I’ll use the symbol $\otimes$ to represent multiplication of affine matrices. Later, we’ll explore how to actually compute this.</p> <p>We need to do three different things to the image: desaturate, whiten, then multiply. Because matrix multiplication is associative, we can tackle these individually. I’ll cover the first one in depth and the other two more quickly.</p> <h3>Desaturation</h3> <p>Suppose we have a single pixel with color $(r, g, b)$, which we’ll represent as a column vector $\begin{bmatrix} r &amp; g &amp; b \end{bmatrix}^T$. If you’re familiar with RGB colors, you’ll know that gray values are all of the form $\begin{bmatrix} k &amp; k &amp; k \end{bmatrix}^T $ for some $k$; that is, all the components are the same. A simple way to desaturate a color is to take the average of all the components and assign that to each component, as so: $$ \begin{bmatrix} r \\ g \\ b \end{bmatrix} \mapsto \begin{bmatrix} (r + g + b) / 3 \\ (r + g + b) / 3 \\ (r + g + b) / 3 \end{bmatrix}. $$ This is a good start, but it doesn’t account for the fact that humans perceive green as much brighter than blue. Instead, the standard value for $k$ is given by a <em>weighted</em> average of the three components. That is, $$k = w_r r + w_g g + w_b b$$ for some $w_r, w_g, and w_b$ such that $w_r + w_g + w_b = 1$ (so as not to cause the image to get brighter or darker overall). The standard RGB weights are $w_r = 0.299$, $w_g = 0.587$, and $w_b = 0.114$. So we really want our desaturation transform to work as follows: $$ \begin{bmatrix} r \\ g \\ b \end{bmatrix} \mapsto \begin{bmatrix} w_r r + w_g g + w_b b \\ w_r r + w_g g + w_b b \\ w_r r + w_g g + w_b b \end{bmatrix} = \begin{bmatrix} 0.299 r + 0.587 g + 0.114 b \\ 0.299 r + 0.587 g + 0.114 b \\ 0.299 r + 0.587 g + 0.114 b \end{bmatrix}. $$</p> <p>Great. Now we know what we start with and what we want to end up with. At this point, we want to find a matrix $D$ such that $$ D \otimes \begin{bmatrix} r \\ g \\ b \end{bmatrix} = \left[ \begin{array}{cccc} d_{11} &amp; d_{12} &amp; d_{13} &amp; d_{14} \\ d_{21} &amp; d_{22} &amp; d_{23} &amp; d_{24} \\ d_{31} &amp; d_{32} &amp; d_{33} &amp; d_{34} \end{array} \right] \otimes\begin{bmatrix} r \\ g \\ b \end{bmatrix} = \begin{bmatrix} w_r r + w_g g + w_b b \\ w_r r + w_g g + w_b b \\ w_r r + w_g g + w_b b \end{bmatrix}. $$</p> <p>Let’s consider the first entry of the target matrix. By the definition of affine matrix transformation, we must have $$d_{11} r + d_{12} g + d_{13} b + d_{14} = w_r r + w_g g + w_b b.$$ Because we want this to hold for <em>all</em> values of $r$, $g$, and $b$, we can use the classic method of comparing coefficients to see immediately that we must have $d_{11} = w_r$, $d_{12} = w_g$, $d_{13} = w_b$, and $d_{14} = 0$ (because there is no constant term on the right-hand side).</p> <p>Similar logic applies to the other two rows, so we see that $$ D = \left[ \begin{array}{cccc} w_r &amp; w_g &amp; w_b &amp; 0 \\ w_r &amp; w_g &amp; w_b &amp; 0 \\ w_r &amp; w_g &amp; w_b &amp; 0 \end{array} \right].$$ Sweet!</p> <p>But wait—the spec said that we only want to <em>partially</em> desaturate the image. So let’s find a matrix to desaturate a matrix by some factor $k_D$. (In particular, the spec lets $k_D = 0.5$.)</p> <p>We can do this by linearly interpolating each color component. So if $r_0$ is the initial red value and $r_1$ is the fully desaturated red value, then $r = (1 - k_D) r_0 + k_D r_1$ is the red value desaturated by the factor $k_D$. That is, we now want $$ \begin{bmatrix} r \\ g \\ b \end{bmatrix} \mapsto \begin{bmatrix} (1 - k_D) r + k_D (w_r r + w_g g + w_b b) \\ (1 - k_D) g + k_D (w_r r + w_g g + w_b b) \\ (1 - k_D) b + k_D (w_r r + w_g g + w_b b) \end{bmatrix}. $$ Similarly to before, we can create a new matrix $D$, and solve $$ D \otimes \begin{bmatrix} r \\ g \\ b \end{bmatrix} = \left[ \begin{array}{ccc|c} d_{11} &amp; d_{12} &amp; d_{13} &amp; d_{14} \\ d_{21} &amp; d_{22} &amp; d_{23} &amp; d_{24} \\ d_{31} &amp; d_{32} &amp; d_{33} &amp; d_{34} \end{array} \right] \otimes \begin{bmatrix} r \\ g \\ b \end{bmatrix} $$ $$ = \begin{bmatrix} (1 - k_D) r + k_D (w_r r + w_g g + w_b b) \\ (1 - k_D) g + k_D (w_r r + w_g g + w_b b) \\ (1 - k_D) b + k_D (w_r r + w_g g + w_b b) \end{bmatrix}. $$ Let’s look at the first row. The right-hand side expands to $$(k_D w_r + 1 - k_D) r + k_D w_g g + k_D w_b b,$$ so we see that we must have $$d_{11} = k_D w_r + 1 - k_D, \quad d_{12} = k_D w_g, \quad \text{and} \quad d_{13} = k_D w_b.$$ In the second row, we similarly have $$d_{21} = k_D w_r, \quad d_{22} = k_D w_g + 1 - k_D, \quad \text{and} \quad d_{23} = k_D w_b.$$ Finally, in the third row, we similarly have $$d_{31} = k_D w_r, \quad d_{32} = k_D w_g, \quad \text{and} \quad d_{33} = k_D w_b + 1 - k_D.$$ As before, all the constant terms are zero. Therefore, the new desaturation matrix is $$ D = \left[ \begin{array}{ccc|c} k_D w_r + (1 - k_D) &amp; k_D w_g &amp; k_D w_b &amp; 0 \\ k_D w_r &amp; k_D w_g + (1 - k_D) &amp; k_D w_b &amp; 0 \\ k_D w_r &amp; k_D w_g &amp; k_D w_b + (1 - k_D) &amp; 0 \end{array} \right]. $$ We can write this perhaps a bit more cleanly as $$ D = \left[ \begin{array}{ccc|c} k_D w_r &amp; k_D w_g &amp; k_D w_b &amp; 0 \\ k_D w_r &amp; k_D w_g &amp; k_D w_b &amp; 0 \\ k_D w_r &amp; k_D w_g &amp; k_D w_b &amp; 0 \end{array} \right] + (1 - k_D) I_{34}, $$ if we interpret “$I_{34}$” as the identity affine matrix. Some might write this in terms of embedded matrices as $$ D = \left[ \begin{array}{c|c} k_D \vec w &amp; \\ k_D \vec w &amp; \vec 0 \\ k_D \vec w &amp; \end{array} \right] + (1 - k_D) \left[ \begin{array}{c|c} I_3 &amp; \vec 0 \end{array} \right]. $$</p> <h3>Lightening</h3> <p>We next wanted to lighten the images by some factor $k_L = 0.5$. White has a value of $1$, so we can transform some channel $x$ to $k_L + (1 - k_L) x$. Therefore, we want to map $$ \begin{bmatrix} r \\ g \\ b \end{bmatrix} \mapsto \begin{bmatrix} k_L + (1 - k_L) r \\ k_L + (1 - k_L) g \\ k_L + (1 - k_L) b \end{bmatrix}.$$ We can immediately see that the matrix will be diagonal, because none of the components depends on the others. We also see that each component is scaled by a factor $1 - k_L$, and then a constant factor $k_L$ is added. (If you don’t see this, you can go through the same process as with desaturation to convince yourself.) So the lightening matrix must be $$ L = \left[ \begin{array}{ccc|c} 1 - k_L &amp; &amp; &amp; k_L \\ &amp; 1 - k_L &amp; &amp; k_L \\ &amp; &amp; 1 - k_L &amp; k_L \end{array} \right] = \left[ \begin{array}{c|c} (1 - k_L) I_3 &amp; k_L \end{array} \right]. $$ That wasn’t too bad at all!</p> <h3>Multiplying</h3> <p>Finally, we want to multiply our color with some base color $\vec c = \begin{bmatrix} c_r &amp; c_g &amp; c_b \end{bmatrix}^T$. The definition of RGB image multiplication stipulates that we multiply each of three channels individually, so that $$ \begin{bmatrix} r \\ g \\ b \end{bmatrix} \mapsto \begin{bmatrix} c_r r \\ c_g g \\ c_b b \end{bmatrix}. $$ In this case, a full-factor multiply was specified, so we don’t need to interpolate anything. Therefore, the matrix is diagonal: $$M = \left[ \begin{array}{ccc|c} c_r &amp; &amp; &amp; 0 \\ &amp; c_g &amp; &amp; 0 \\ &amp; &amp; c_b &amp; 0 \end{array} \right] = \left[ \begin{array}{c|c} \mathrm{diag} \ \vec c &amp; 0 \end{array} \right]. $$</p> <h2>Combining the matrices</h2> <p>Now that I&nbsp;had the three transformation matrices that I&nbsp;needed, I&nbsp;could have applied transforms three times. But hold on a moment: applying these transforms is just the same as multiplying matrices, which is associative.</p> <p>Suppose that our initial pixel is a column vector $\vec p_0$. To desaturate it, we left-multiply by a slightly-modified version of the desaturation matrix, which I’ll denote $D^*$; that is, $\vec p_1 = D^* \, \vec p_0$ is the desaturated pixel. Then, we want to lighten this, so $\vec p_2 = L^* \vec p_1$. Finally, multiplying, $\vec p_3 = M^* \vec p_2$, and $\vec p_3$ is our final value.</p> <p>But we can just substitute to show that $$\vec p_3 = M^* \vec p_2 = M^* (L^* \vec p_1) = M^* (L^* (D^* \vec p_0)) = (M^* L^* D^*) \vec p_0.$$ This shows that we can create a combined transform by just multiplying the matrices in reverse order! By pre-computing that matrix $M^* L^* D^*$, we only have to perform one matrix multiplication (per pixel) instead of three! If you ever wondered why the definition of matrix multiplication seems so convoluted, it’s because that definition allows awesome things like this to happen.</p> <p>If you’re following along closely, you might note that the three matrices $M$, $L$, and $D$ are all $3 \times 4$ matrices. That poses a problem, because we can’t multiply them directly. This is where the starred variants come in. If $A$ is a $3 \times 4$ matrix representing an affine transformation, then we can let $$ A^* = \begin{bmatrix} a_{11} &amp; a_{12} &amp; a_{13} &amp; a_{14} \\ a_{21} &amp; a_{22} &amp; a_{23} &amp; a_{24} \\ a_{31} &amp; a_{32} &amp; a_{33} &amp; a_{34} \\ 0 &amp; 0 &amp; 0 &amp; 1 \end{bmatrix}. $$ I&nbsp;claim that if we also extend the pixel vectors to have an extra $1$ entry at the bottom, then these matrices will behave as we desire under multiplication.</p> <p>Let’s first take a look at just applying such a matrix to make sure it does what we want. Note that  $$ \begin{array}{rl} A^* \vec p &amp;= \begin{bmatrix} a_{11} &amp; a_{12} &amp; a_{13} &amp; a_{14} \\ a_{21} &amp; a_{22} &amp; a_{23} &amp; a_{24} \\ a_{31} &amp; a_{32} &amp; a_{33} &amp; a_{34} \\ 0 &amp; 0 &amp; 0 &amp; 1 \end{bmatrix} \begin{bmatrix} r \\ g \\ b \\ 1 \end{bmatrix} \\ \\ &amp;= \begin{bmatrix} a_{11} r + a_{12} g + a_{13} b + a_{14} (1) \\ a_{21} r + a_{22} g + a_{23} b + a_{24} (1) \\ a_{31} r + a_{32} g + a_{33} b + a_{34} (1) \\ 0r + 0g + 0b + 1(1) \end{bmatrix} \\ \\ &amp;= \begin{bmatrix} a_{11} r + a_{12} g + a_{13} b + a_{14} \\ a_{21} r + a_{22} g + a_{23} b + a_{24} \\ a_{31} r + a_{32} g + a_{33} b + a_{34} \\ 1 \end{bmatrix}, \end{array} $$ which is exactly what we expect: the “normal matrix” part multiplied as normal, the affine components were added as constants, and we even get a $1$ back in the last entry so that we can do this again the next time we multiply!</p> <p>It’s also not hard to show that the matrices compose as desired, but I’ll omit that here because it involves adding a lot of things and your eyes would just glaze over anyway. It’ll be more meaningful if you do it yourself.</p> <p>In this way, we can create the three original matrices, then their starred variants, then multiply them together to get a single matrix that we can apply to each pixel.</p> <h2>Code?</h2> <p><a href="https://gist.github.com/WChargin/d8eb0cbafc4d4479d004">Sure!</a></p> <p>The implementation is a tad different because color values are integers in $\mathbb Z \cap [0, 256)$ instead of arbitrary reals in the interval $[0, 1]$. But the core idea is the same.</p> <h2>Results</h2> <p>The time to composite a full-resolution ($1280 \times 720$) thumbnail using this method is $25.8\,\mathrm{ms}$ (on my laptop). The most time-consuming factors for the request are now network overhead, middleware, and RPC calls (e.g., to load the actual image from Google Cloud Storage).</p> <p>To put that in perspective, it’s a speedup of over $1350{\times}$.</p> <p>This was acceptable.</p> <h2>Lessons</h2> <ul> <li> <p>Don’t trust the documentation. (The compiler won’t.)</p> </li> <li> <p>Pay attention in math class (or on Khan Academy if your math class, like mine, didn’t cover this).</p> </li> <li> <p>For computationally intensive operations, low-level operations are a must. <a href="http://asserttrue.blogspot.com/2009/03/how-to-write-fast-code.html">To go fast, do less.</a></p> </li> </ul> </div> </article> <script async src="/javascript/katex-entry.js"></script> <div class="keep-reading-buttons"> <div class="keep-reading-cell keep-reading-left"> <div class="button prev-post-button team-web-frontend"> <div class="header">previous post</div> <a href="/posts/copy-pasting-more-than-just-text.htm" class="post-title">Copy-pasting more than just text</a> </div> </div> <div class="keep-reading-cell keep-reading-right"> <div class="button next-post-button team-infrastructure"> <div class="header">next post</div> <a href="/posts/i18nize-templates.htm" class="post-title">i18nize-templates: Internationalization After the Fact</a> </div> </div> </div> </main> <script>document.getElementById("mobile-menu-button").onclick=function(){var e=document.body,t=document.getElementById("left-bar"),a=document.getElementById("content");"mobile-visible"===t.className?(e.className="",t.className="",a.className=""):(e.className="mobile-menu-visible",t.className="mobile-visible",a.className="mobile-hidden")};var totallyActivated=!1;document.getElementById("activate-tota11y").onclick=function(){if(totallyActivated)console.log("Tota11y already activated. Doing nothing.");else{var e=document.createElement("script");e.src="/javascript/tota11y.min.js",document.head.appendChild(e),totallyActivated=!0}},function(e,t,a,n,c,l,o){e.GoogleAnalyticsObject=c,e.ga=e.ga||function(){(e.ga.q=e.ga.q||[]).push(arguments)},e.ga.l=1*new Date,l=t.createElement(a),o=t.getElementsByTagName(a)[0],l.async=1,l.src="//www.google-analytics.com/analytics.js",o.parentNode.insertBefore(l,o)}(window,document,"script",0,"ga"),ga("create","UA-65856931-1","auto"),ga("send","pageview");</script> </body> </html> 